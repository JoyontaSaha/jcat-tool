#!/bin/bash
#
# jcat - A concatenate and print files utility
# 
# Author: [Your Name]
# Version: 1.0.0
#
# Copyright 2024 [Your Organization]
# Licensed under the Apache License, Version 2.0

set -euo pipefail
IFS=$'\n\t'

# Script version
readonly VERSION="1.0.0"

# Constants
readonly SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"
readonly LIB_DIR="${SCRIPT_DIR}/../lib/jcat"

# Print help message
print_help() {
  cat <<EOF
jcat - concatenate and print files

Usage: jcat [OPTION]... [FILE]...
   or: jcat [OPTION] -

Print FILE(s) to standard output.

Options:
  -h, --help     Display this help message and exit
  -v, --version  Display version information and exit
  -n             Number all output lines
  -b             Number nonempty output lines
  -              Read from standard input

Examples:
  jcat f1        Output file f1's contents
  jcat f1 f2     Output f1's contents, then f2's contents
  jcat -n        Number all output lines from stdin
  jcat -b        Number non-blank output lines from stdin

Report bugs to: [Joyontasaha95@gmail.com]
EOF
}

# Print version information
print_version() {
  echo "jcat version ${VERSION}"
}

# Print error message to stderr
error() {
  echo "jcat::Error: $*" >&2
}

# Main function
main() {
  # Parse command-line options
  case "${1:-}" in
    -h|--help)
      print_help
      exit 0
      ;;
    -v|--version)
      print_version
      exit 0
      ;;
    '')
      error "No arguments provided."
      print_help
      exit 1
      ;;
  esac

  # Check for multiple files
  if [[ $# -gt 1 ]]; then
    source "${LIB_DIR}/concatenate_files.sh" "$@"
    exit $?
  fi

  # Check for stdin options
  if [[ "$1" == "-" || "$1" == "-n" || "$1" == "-b" ]]; then
    source "${LIB_DIR}/read_std_input.sh" "$1"
    exit $?
  fi

  # Handle single file case
  source "${LIB_DIR}/read_file.sh" "$1"
  exit $?
}

# Execute main function
main "$@"