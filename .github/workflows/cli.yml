name: JCAT Tool CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [ opened, synchronize, reopened ]

jobs:
  test-and-validate-linux:
    name: Test and Validate JCAT Tool on Linux
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install Bats
      run: |
        rm -rf tests/bats tests/test_helper/bats-support tests/test_helper/bats-assert
        git clone https://github.com/bats-core/bats-core.git tests/bats
        git clone https://github.com/bats-core/bats-support.git tests/test_helper/bats-support
        git clone https://github.com/bats-core/bats-assert.git tests/test_helper/bats-assert

    - name: Run Bash script tests
      run: |
        bash tests/run_tests.sh

    - name: Check script syntax
      run: |
        find bin/ -type f -exec bash -n {} +
        find bin/ lib/jcat/ -type f -name "*.sh" -exec bash -n {} +
        bash -n install_jcat.sh
        bash -n uninstall_jcat.sh
        bash -n tests/run_tests.sh

  test-and-validate-macos:
    name: Test and Validate JCAT Tool on macOS
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install Bats
      run: |
        rm -rf tests/bats tests/test_helper/bats-support tests/test_helper/bats-assert
        git clone https://github.com/bats-core/bats-core.git tests/bats
        git clone https://github.com/bats-core/bats-support.git tests/test_helper/bats-support
        git clone https://github.com/bats-core/bats-assert.git tests/test_helper/bats-assert

    - name: Run Bash script tests
      run: |
        bash tests/run_tests.sh

    - name: Check script syntax
      run: |
        find bin/ -type f -exec bash -n {} +
        find bin/ lib/jcat/ -type f -name "*.sh" -exec bash -n {} +
        bash -n install_jcat.sh
        bash -n uninstall_jcat.sh
        bash -n tests/run_tests.sh

  check-pull-request:
    name: Check Pull Request Status
    runs-on: ubuntu-latest
    needs: [test-and-validate-linux, test-and-validate-macos]
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Check if all tests passed
        run: |
          if [[ "${{ job.status }}" != "success" ]]; then
            echo "Not all tests passed. Pull request cannot be merged."
            exit 1
          fi
